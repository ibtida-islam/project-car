{"ast":null,"code":"// import React, { useState } from 'react';\n// import \"../styles/driver-registration.css\";\n// const DriverRegistrationPage = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     phone: '',\n//     age: '',\n//     address: '',\n//     licenseNumber: '',\n//     identificationProof: '',\n//     idProofType: 'adhar', // Default value for identification proof type\n//     drivingLicense: null, // To handle file upload for driving license\n//     idProofFile: null, // To handle file upload for identification proof\n//     picture: null, // To handle file upload for the driver's picture\n//   });\n//   const [errors, setErrors] = useState({});\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     setFormData({ ...formData, [name]: files[0] });\n//   };\n//   const validateForm = () => {\n//     const newErrors = {};\n//     Object.keys(formData).forEach((field) => {\n//       if (field !== 'drivingLicense' && field !== 'idProofFile' && field !== 'picture' && !formData[field]) {\n//         newErrors[field] = `${field.replace(/([A-Z])/g, ' $1').toUpperCase()} is required.`;\n//       }\n//     });\n//     // Specific validation for file fields\n//     if (!formData.drivingLicense) newErrors.drivingLicense = 'Please upload your driving license.';\n//     if (!formData.idProofFile) newErrors.idProofFile = 'Please upload your identification proof.';\n//     if (!formData.picture) newErrors.picture = 'Please upload a picture.';\n//     return newErrors;\n//   };\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const formErrors = validateForm();\n//     if (Object.keys(formErrors).length === 0) {\n//       console.log('Form submitted:', formData);\n//     } else {\n//       setErrors(formErrors);\n//     }\n//   };\n//   const fields = [\n//     { label: 'Full Name', name: 'name', type: 'text' },\n//     { label: 'Email', name: 'email', type: 'email' },\n//     { label: 'Phone Number', name: 'phone', type: 'text' },\n//     { label: 'Age', name: 'age', type: 'number' },\n//     { label: 'Address', name: 'address', type: 'text' },\n//     { label: 'License Number', name: 'licenseNumber', type: 'text' },\n//   ];\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-r from-blue-900 to-yellow-400 flex items-center justify-center py-8\">\n//       <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n//         <h2 className=\"form-heading\">Driver Registration</h2>\n//         <form onSubmit={handleSubmit} className=\"form-container\">\n//           {/* Render standard input fields */}\n//           {fields.map(({ label, name, type }) => (\n//             <div key={name} className=\"form-group\">\n//               <label htmlFor={name} className=\"label\">{label}</label>\n//               <div className=\"input-group\">\n//                 <input\n//                   type={type}\n//                   id={name}\n//                   name={name}\n//                   value={formData[name]}\n//                   onChange={handleInputChange}\n//                   className=\"input-field\"\n//                 />\n//                 {name === 'name' && (\n//                   <input\n//                     type=\"file\"\n//                     id=\"picture\"\n//                     name=\"picture\"\n//                     onChange={handleFileChange}\n//                     className=\"file-input\"\n//                     accept=\"image/*\"\n//                   />\n//                 )}\n//               </div>\n//               {errors[name] && <p className=\"error-text\">{errors[name]}</p>}\n//             </div>\n//           ))}\n//           {/* Identification Proof Type */}\n//           <div className=\"form-group\">\n//             <label htmlFor=\"idProofType\" className=\"label\">Identification Proof Type</label>\n//             <select\n//               id=\"idProofType\"\n//               name=\"idProofType\"\n//               value={formData.idProofType}\n//               onChange={handleInputChange}\n//               className=\"input-field\"\n//             >\n//               <option value=\"adhar\">Aadhar Card</option>\n//               <option value=\"passport\">Passport</option>\n//             </select>\n//             {errors.idProofType && <p className=\"error-text\">{errors.idProofType}</p>}\n//           </div>\n//           {/* File Upload for Driving License */}\n//           <div className=\"form-group\">\n//             <label htmlFor=\"drivingLicense\" className=\"label\">Upload Driving License</label>\n//             <input\n//               type=\"file\"\n//               id=\"drivingLicense\"\n//               name=\"drivingLicense\"\n//               onChange={handleFileChange}\n//               className=\"file-input\"\n//             />\n//             {errors.drivingLicense && <p className=\"error-text\">{errors.drivingLicense}</p>}\n//           </div>\n//           {/* File Upload for Identification Proof */}\n//           <div className=\"form-group\">\n//             <label htmlFor=\"idProofFile\" className=\"label\">Upload Identification Proof</label>\n//             <input\n//               type=\"file\"\n//               id=\"idProofFile\"\n//               name=\"idProofFile\"\n//               onChange={handleFileChange}\n//               className=\"file-input\"\n//             />\n//             {errors.idProofFile && <p className=\"error-text\">{errors.idProofFile}</p>}\n//           </div>\n//           <button type=\"submit\" className=\"submit-button\">\n//             Register as Driver\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n// export default DriverRegistrationPage;\nimport React,{useState}from'react';import\"../styles/driver-registration.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DriverRegistrationPage=()=>{const[formData,setFormData]=useState({name:'',email:'',phone:'',age:'',address:'',licenseNumber:'',identificationProof:'',idProofType:'adhar',// Default value for identification proof type\ndrivingLicense:null,// To handle file upload for driving license\nidProofFile:null// To handle file upload for identification proof\n});const[errors,setErrors]=useState({});const handleInputChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleFileChange=e=>{const{name,files}=e.target;setFormData({...formData,[name]:files[0]});};const validateForm=()=>{const newErrors={};// Loop over each field in formData to check if they are empty\nObject.keys(formData).forEach(field=>{if(field!=='drivingLicense'&&field!=='idProofFile'&&!formData[field]){newErrors[field]=`${field.replace(/([A-Z])/g,' $1').toUpperCase()} is required.`;}});// Specific validation for file fields\nif(!formData.drivingLicense)newErrors.drivingLicense='Please upload your driving license.';if(!formData.idProofFile)newErrors.idProofFile='Please upload your identification proof.';return newErrors;};const handleSubmit=e=>{e.preventDefault();const formErrors=validateForm();if(Object.keys(formErrors).length===0){// Form is valid, handle the form submission\nconsole.log('Form submitted:',formData);}else{setErrors(formErrors);}};// Array of fields to render\nconst fields=[{label:'Full Name',name:'name',type:'text'},{label:'Email',name:'email',type:'email'},{label:'Phone Number',name:'phone',type:'text'},{label:'Age',name:'age',type:'number'},{label:'Address',name:'address',type:'text'},{label:'License Number',name:'licenseNumber',type:'text'}];return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-r from-blue-900 to-yellow-400 flex items-center justify-center py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 m-6  rounded-lg shadow-lg w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"form-heading\",children:\"Driver Registration\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"form-container\",children:[fields.map(_ref=>{let{label,name,type}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:name,className:\"label\",children:label}),/*#__PURE__*/_jsx(\"input\",{type:type,id:name,name:name,value:formData[name],onChange:handleInputChange,className:\"input-field\"}),errors[name]&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:errors[name]})]},name);}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"idProofType\",className:\"label\",children:\"Identification Proof Type\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"idProofType\",name:\"idProofType\",value:formData.idProofType,onChange:handleInputChange,className:\"input-field\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"adhar\",children:\"Aadhar Card\"}),/*#__PURE__*/_jsx(\"option\",{value:\"passport\",children:\"Passport\"})]}),errors.idProofType&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:errors.idProofType})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"drivingLicense\",className:\"label\",children:\"Upload Driving License\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"drivingLicense\",name:\"drivingLicense\",onChange:handleFileChange,className:\"file-input\"}),errors.drivingLicense&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:errors.drivingLicense})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"idProofFile\",className:\"label\",children:\"Upload Identification Proof\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"idProofFile\",name:\"idProofFile\",onChange:handleFileChange,className:\"file-input\"}),errors.idProofFile&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:errors.idProofFile})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Register as Driver\"})]})]})});};export default DriverRegistrationPage;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","DriverRegistrationPage","formData","setFormData","name","email","phone","age","address","licenseNumber","identificationProof","idProofType","drivingLicense","idProofFile","errors","setErrors","handleInputChange","e","value","target","handleFileChange","files","validateForm","newErrors","Object","keys","forEach","field","replace","toUpperCase","handleSubmit","preventDefault","formErrors","length","console","log","fields","label","type","className","children","onSubmit","map","_ref","htmlFor","id","onChange"],"sources":["C:/Users/Megha Dutta/car rental/new_car/src/pages/DriverRegistrationPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import \"../styles/driver-registration.css\";\r\n\r\n// const DriverRegistrationPage = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     age: '',\r\n//     address: '',\r\n//     licenseNumber: '',\r\n//     identificationProof: '',\r\n//     idProofType: 'adhar', // Default value for identification proof type\r\n//     drivingLicense: null, // To handle file upload for driving license\r\n//     idProofFile: null, // To handle file upload for identification proof\r\n//     picture: null, // To handle file upload for the driver's picture\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//     const { name, files } = e.target;\r\n//     setFormData({ ...formData, [name]: files[0] });\r\n//   };\r\n\r\n//   const validateForm = () => {\r\n//     const newErrors = {};\r\n//     Object.keys(formData).forEach((field) => {\r\n//       if (field !== 'drivingLicense' && field !== 'idProofFile' && field !== 'picture' && !formData[field]) {\r\n//         newErrors[field] = `${field.replace(/([A-Z])/g, ' $1').toUpperCase()} is required.`;\r\n//       }\r\n//     });\r\n\r\n//     // Specific validation for file fields\r\n//     if (!formData.drivingLicense) newErrors.drivingLicense = 'Please upload your driving license.';\r\n//     if (!formData.idProofFile) newErrors.idProofFile = 'Please upload your identification proof.';\r\n//     if (!formData.picture) newErrors.picture = 'Please upload a picture.';\r\n\r\n//     return newErrors;\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const formErrors = validateForm();\r\n//     if (Object.keys(formErrors).length === 0) {\r\n//       console.log('Form submitted:', formData);\r\n//     } else {\r\n//       setErrors(formErrors);\r\n//     }\r\n//   };\r\n\r\n//   const fields = [\r\n//     { label: 'Full Name', name: 'name', type: 'text' },\r\n//     { label: 'Email', name: 'email', type: 'email' },\r\n//     { label: 'Phone Number', name: 'phone', type: 'text' },\r\n//     { label: 'Age', name: 'age', type: 'number' },\r\n//     { label: 'Address', name: 'address', type: 'text' },\r\n//     { label: 'License Number', name: 'licenseNumber', type: 'text' },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-r from-blue-900 to-yellow-400 flex items-center justify-center py-8\">\r\n//       <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n//         <h2 className=\"form-heading\">Driver Registration</h2>\r\n//         <form onSubmit={handleSubmit} className=\"form-container\">\r\n//           {/* Render standard input fields */}\r\n//           {fields.map(({ label, name, type }) => (\r\n//             <div key={name} className=\"form-group\">\r\n//               <label htmlFor={name} className=\"label\">{label}</label>\r\n//               <div className=\"input-group\">\r\n//                 <input\r\n//                   type={type}\r\n//                   id={name}\r\n//                   name={name}\r\n//                   value={formData[name]}\r\n//                   onChange={handleInputChange}\r\n//                   className=\"input-field\"\r\n//                 />\r\n//                 {name === 'name' && (\r\n//                   <input\r\n//                     type=\"file\"\r\n//                     id=\"picture\"\r\n//                     name=\"picture\"\r\n//                     onChange={handleFileChange}\r\n//                     className=\"file-input\"\r\n//                     accept=\"image/*\"\r\n//                   />\r\n//                 )}\r\n//               </div>\r\n//               {errors[name] && <p className=\"error-text\">{errors[name]}</p>}\r\n//             </div>\r\n//           ))}\r\n\r\n//           {/* Identification Proof Type */}\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"idProofType\" className=\"label\">Identification Proof Type</label>\r\n//             <select\r\n//               id=\"idProofType\"\r\n//               name=\"idProofType\"\r\n//               value={formData.idProofType}\r\n//               onChange={handleInputChange}\r\n//               className=\"input-field\"\r\n//             >\r\n//               <option value=\"adhar\">Aadhar Card</option>\r\n//               <option value=\"passport\">Passport</option>\r\n//             </select>\r\n//             {errors.idProofType && <p className=\"error-text\">{errors.idProofType}</p>}\r\n//           </div>\r\n\r\n//           {/* File Upload for Driving License */}\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"drivingLicense\" className=\"label\">Upload Driving License</label>\r\n//             <input\r\n//               type=\"file\"\r\n//               id=\"drivingLicense\"\r\n//               name=\"drivingLicense\"\r\n//               onChange={handleFileChange}\r\n//               className=\"file-input\"\r\n//             />\r\n//             {errors.drivingLicense && <p className=\"error-text\">{errors.drivingLicense}</p>}\r\n//           </div>\r\n\r\n//           {/* File Upload for Identification Proof */}\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"idProofFile\" className=\"label\">Upload Identification Proof</label>\r\n//             <input\r\n//               type=\"file\"\r\n//               id=\"idProofFile\"\r\n//               name=\"idProofFile\"\r\n//               onChange={handleFileChange}\r\n//               className=\"file-input\"\r\n//             />\r\n//             {errors.idProofFile && <p className=\"error-text\">{errors.idProofFile}</p>}\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"submit-button\">\r\n//             Register as Driver\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DriverRegistrationPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport \"../styles/driver-registration.css\";\r\n\r\nconst DriverRegistrationPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    age: '',\r\n    address: '',\r\n    licenseNumber: '',\r\n    identificationProof: '',\r\n    idProofType: 'adhar', // Default value for identification proof type\r\n    drivingLicense: null, // To handle file upload for driving license\r\n    idProofFile: null, // To handle file upload for identification proof\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const { name, files } = e.target;\r\n    setFormData({ ...formData, [name]: files[0] });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    // Loop over each field in formData to check if they are empty\r\n    Object.keys(formData).forEach((field) => {\r\n      if (field !== 'drivingLicense' && field !== 'idProofFile' && !formData[field]) {\r\n        newErrors[field] = `${field.replace(/([A-Z])/g, ' $1').toUpperCase()} is required.`;\r\n      }\r\n    });\r\n\r\n    // Specific validation for file fields\r\n    if (!formData.drivingLicense) newErrors.drivingLicense = 'Please upload your driving license.';\r\n    if (!formData.idProofFile) newErrors.idProofFile = 'Please upload your identification proof.';\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formErrors = validateForm();\r\n    if (Object.keys(formErrors).length === 0) {\r\n      // Form is valid, handle the form submission\r\n      console.log('Form submitted:', formData);\r\n    } else {\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  // Array of fields to render\r\n  const fields = [\r\n    { label: 'Full Name', name: 'name', type: 'text' },\r\n    { label: 'Email', name: 'email', type: 'email' },\r\n    { label: 'Phone Number', name: 'phone', type: 'text' },\r\n    { label: 'Age', name: 'age', type: 'number' },\r\n    { label: 'Address', name: 'address', type: 'text' },\r\n    { label: 'License Number', name: 'licenseNumber', type: 'text' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-blue-900 to-yellow-400 flex items-center justify-center py-8\">\r\n      <div className=\"bg-white p-8 m-6  rounded-lg shadow-lg w-full max-w-md\">\r\n               <h2 className=\"form-heading\">Driver Registration</h2>\r\n<form onSubmit={handleSubmit} className=\"form-container\">\r\n  {/* Render standard input fields */}\r\n  {fields.map(({ label, name, type }) => (\r\n    <div key={name} className=\"form-group\">\r\n      <label htmlFor={name} className=\"label\">{label}</label>\r\n      <input\r\n        type={type}\r\n        id={name}\r\n        name={name}\r\n        value={formData[name]}\r\n        onChange={handleInputChange}\r\n        className=\"input-field\"\r\n      />\r\n      {errors[name] && <p className=\"error-text\">{errors[name]}</p>}\r\n    </div>\r\n  ))}\r\n\r\n  {/* Identification Proof Type (Aadhar or Passport) */}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"idProofType\" className=\"label\">Identification Proof Type</label>\r\n    <select\r\n      id=\"idProofType\"\r\n      name=\"idProofType\"\r\n      value={formData.idProofType}\r\n      onChange={handleInputChange}\r\n      className=\"input-field\"\r\n    >\r\n      <option value=\"adhar\">Aadhar Card</option>\r\n      <option value=\"passport\">Passport</option>\r\n    </select>\r\n    {errors.idProofType && <p className=\"error-text\">{errors.idProofType}</p>}\r\n  </div>\r\n\r\n  {/* File Upload for Driving License */}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"drivingLicense\" className=\"label\">Upload Driving License</label>\r\n    <input\r\n      type=\"file\"\r\n      id=\"drivingLicense\"\r\n      name=\"drivingLicense\"\r\n      onChange={handleFileChange}\r\n      className=\"file-input\"\r\n    />\r\n    {errors.drivingLicense && <p className=\"error-text\">{errors.drivingLicense}</p>}\r\n  </div>\r\n\r\n  {/* File Upload for Identification Proof */}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"idProofFile\" className=\"label\">Upload Identification Proof</label>\r\n    <input\r\n      type=\"file\"\r\n      id=\"idProofFile\"\r\n      name=\"idProofFile\"\r\n      onChange={handleFileChange}\r\n      className=\"file-input\"\r\n    />\r\n    {errors.idProofFile && <p className=\"error-text\">{errors.idProofFile}</p>}\r\n  </div>\r\n\r\n  <button type=\"submit\" className=\"submit-button\">\r\n    Register as Driver\r\n  </button>\r\n</form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriverRegistrationPage;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}