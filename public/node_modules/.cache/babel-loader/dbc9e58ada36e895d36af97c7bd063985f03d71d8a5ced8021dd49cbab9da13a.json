{"ast":null,"code":"import React,{useState}from\"react\";import{CardElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import\"../../styles/checkoutform.css\";// CheckoutForm component - handles Stripe payment processing\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CheckoutForm=_ref=>{let{amount}=_ref;const stripe=useStripe();const elements=useElements();const[isProcessing,setIsProcessing]=useState(false);const[paymentMessage,setPaymentMessage]=useState(\"\");const handleSubmit=async e=>{e.preventDefault();if(!stripe||!elements){return;}setIsProcessing(true);// Simulate fetching a payment intent from your backend\nconst response=await fetch(\"http://localhost:5000/create-payment-intent\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({amount:parseFloat(amount)*100})// Convert amount to cents\n});const{clientSecret}=await response.json();const result=await stripe.confirmCardPayment(clientSecret,{payment_method:{card:elements.getElement(CardElement)}});if(result.error){setPaymentMessage(result.error.message);}else if(result.paymentIntent.status===\"succeeded\"){setPaymentMessage(\"Payment successful!\");}setIsProcessing(false);};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"checkout-form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-element-wrapper\",children:/*#__PURE__*/_jsx(CardElement,{options:{hidePostalCode:true}})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"pay-button\",disabled:!stripe||isProcessing,children:isProcessing?\"Processing...\":\"Pay\"}),paymentMessage&&/*#__PURE__*/_jsx(\"p\",{className:`payment-message ${paymentMessage.includes('error')?'error':''}`,children:paymentMessage})]});};// PaymentAmountForm component - asks user for the amount to be paid\nconst PaymentAmountForm=_ref2=>{let{onAmountSubmit}=_ref2;const[amount,setAmount]=useState(\"\");const handleAmountChange=e=>{setAmount(e.target.value);};const handleSubmitAmount=e=>{e.preventDefault();if(amount&&!isNaN(amount)&&parseFloat(amount)>0){onAmountSubmit(amount);// Pass the amount to the parent\n}else{alert(\"Please enter a valid amount\");}};return/*#__PURE__*/_jsxs(\"form\",{class:\"payment-form\",onSubmit:handleSubmitAmount,children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:amount,onChange:handleAmountChange,placeholder:\"Enter amount\",min:\"1\",step:\"0.01\",class:\"payment-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",class:\"payment-button\",children:\"Proceed to Payment\"})]});};// PaymentMethod component - handles flow of entering amount and processing payment\nconst PaymentMethod=()=>{const[amount,setAmount]=useState(null);const handleAmountSubmit=amount=>{setAmount(amount);// Save amount when user submits\n};return/*#__PURE__*/_jsx(\"div\",{children:amount===null?/*#__PURE__*/_jsx(PaymentAmountForm,{onAmountSubmit:handleAmountSubmit}):/*#__PURE__*/_jsx(CheckoutForm,{amount:amount})});};export default PaymentMethod;","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsx","_jsx","jsxs","_jsxs","CheckoutForm","_ref","amount","stripe","elements","isProcessing","setIsProcessing","paymentMessage","setPaymentMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","parseFloat","clientSecret","json","result","confirmCardPayment","payment_method","card","getElement","error","message","paymentIntent","status","onSubmit","className","children","options","hidePostalCode","type","disabled","includes","PaymentAmountForm","_ref2","onAmountSubmit","setAmount","handleAmountChange","target","value","handleSubmitAmount","isNaN","alert","class","onChange","placeholder","min","step","PaymentMethod","handleAmountSubmit"],"sources":["C:/Users/Megha Dutta/car rental/new_car/src/components/UI/CheckoutForm.jsx"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport \"../../styles/checkoutform.css\";\r\n\r\n// CheckoutForm component - handles Stripe payment processing\r\nconst CheckoutForm = ({ amount }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [paymentMessage, setPaymentMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n\r\n    // Simulate fetching a payment intent from your backend\r\n    const response = await fetch(\"http://localhost:5000/create-payment-intent\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ amount: parseFloat(amount) * 100 }), // Convert amount to cents\r\n    });\r\n\r\n    const { clientSecret } = await response.json();\r\n\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      },\r\n    });\r\n\r\n    if (result.error) {\r\n      setPaymentMessage(result.error.message);\r\n    } else if (result.paymentIntent.status === \"succeeded\") {\r\n      setPaymentMessage(\"Payment successful!\");\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  return (\r\n\r\n<form onSubmit={handleSubmit} className=\"checkout-form\">\r\n  <div className=\"card-element-wrapper\">\r\n    <CardElement options={{ hidePostalCode: true }} />\r\n  </div>\r\n  <button type=\"submit\" className=\"pay-button\" disabled={!stripe || isProcessing}>\r\n    {isProcessing ? \"Processing...\" : \"Pay\"}\r\n  </button>\r\n  {paymentMessage && <p className={`payment-message ${paymentMessage.includes('error') ? 'error' : ''}`}>{paymentMessage}</p>}\r\n</form>\r\n\r\n\r\n    \r\n  );\r\n};\r\n\r\n// PaymentAmountForm component - asks user for the amount to be paid\r\nconst PaymentAmountForm = ({ onAmountSubmit }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const handleAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleSubmitAmount = (e) => {\r\n    e.preventDefault();\r\n    if (amount && !isNaN(amount) && parseFloat(amount) > 0) {\r\n      onAmountSubmit(amount); // Pass the amount to the parent\r\n    } else {\r\n      alert(\"Please enter a valid amount\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form class=\"payment-form\" onSubmit={handleSubmitAmount}>\r\n  <input\r\n    type=\"number\"\r\n    value={amount}\r\n    onChange={handleAmountChange}\r\n    placeholder=\"Enter amount\"\r\n    min=\"1\"\r\n    step=\"0.01\"\r\n    class=\"payment-input\"\r\n  />\r\n  <button type=\"submit\" class=\"payment-button\">Proceed to Payment</button>\r\n</form>\r\n\r\n  );\r\n};\r\n\r\n// PaymentMethod component - handles flow of entering amount and processing payment\r\nconst PaymentMethod = () => {\r\n  const [amount, setAmount] = useState(null);\r\n\r\n  const handleAmountSubmit = (amount) => {\r\n    setAmount(amount); // Save amount when user submits\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {amount === null ? (\r\n        <PaymentAmountForm onAmountSubmit={handleAmountSubmit} />\r\n      ) : (\r\n        <CheckoutForm amount={amount} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentMethod;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}