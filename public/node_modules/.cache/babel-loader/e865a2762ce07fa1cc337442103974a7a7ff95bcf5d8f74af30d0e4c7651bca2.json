{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Megha Dutta\\\\car rental\\\\new_car\\\\src\\\\pages\\\\DriverRegistrationPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import \"../styles/driver-registration.css\";\n\n// const DriverRegistrationPage = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     phone: '',\n//     age: '',\n//     address: '',\n//     licenseNumber: '',\n//     identificationProof: '',\n//     idProofType: 'adhar', // Default value for identification proof type\n//     drivingLicense: null, // To handle file upload for driving license\n//     idProofFile: null, // To handle file upload for identification proof\n//     picture: null, // To handle file upload for the driver's picture\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     setFormData({ ...formData, [name]: files[0] });\n//   };\n\n//   const validateForm = () => {\n//     const newErrors = {};\n//     Object.keys(formData).forEach((field) => {\n//       if (field !== 'drivingLicense' && field !== 'idProofFile' && field !== 'picture' && !formData[field]) {\n//         newErrors[field] = `${field.replace(/([A-Z])/g, ' $1').toUpperCase()} is required.`;\n//       }\n//     });\n\n//     // Specific validation for file fields\n//     if (!formData.drivingLicense) newErrors.drivingLicense = 'Please upload your driving license.';\n//     if (!formData.idProofFile) newErrors.idProofFile = 'Please upload your identification proof.';\n//     if (!formData.picture) newErrors.picture = 'Please upload a picture.';\n\n//     return newErrors;\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const formErrors = validateForm();\n//     if (Object.keys(formErrors).length === 0) {\n//       console.log('Form submitted:', formData);\n//     } else {\n//       setErrors(formErrors);\n//     }\n//   };\n\n//   const fields = [\n//     { label: 'Full Name', name: 'name', type: 'text' },\n//     { label: 'Email', name: 'email', type: 'email' },\n//     { label: 'Phone Number', name: 'phone', type: 'text' },\n//     { label: 'Age', name: 'age', type: 'number' },\n//     { label: 'Address', name: 'address', type: 'text' },\n//     { label: 'License Number', name: 'licenseNumber', type: 'text' },\n//   ];\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-r from-blue-900 to-yellow-400 flex items-center justify-center py-8\">\n//       <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n//         <h2 className=\"form-heading\">Driver Registration</h2>\n//         <form onSubmit={handleSubmit} className=\"form-container\">\n//           {/* Render standard input fields */}\n//           {fields.map(({ label, name, type }) => (\n//             <div key={name} className=\"form-group\">\n//               <label htmlFor={name} className=\"label\">{label}</label>\n//               <div className=\"input-group\">\n//                 <input\n//                   type={type}\n//                   id={name}\n//                   name={name}\n//                   value={formData[name]}\n//                   onChange={handleInputChange}\n//                   className=\"input-field\"\n//                 />\n//                 {name === 'name' && (\n//                   <input\n//                     type=\"file\"\n//                     id=\"picture\"\n//                     name=\"picture\"\n//                     onChange={handleFileChange}\n//                     className=\"file-input\"\n//                     accept=\"image/*\"\n//                   />\n//                 )}\n//               </div>\n//               {errors[name] && <p className=\"error-text\">{errors[name]}</p>}\n//             </div>\n//           ))}\n\n//           {/* Identification Proof Type */}\n//           <div className=\"form-group\">\n//             <label htmlFor=\"idProofType\" className=\"label\">Identification Proof Type</label>\n//             <select\n//               id=\"idProofType\"\n//               name=\"idProofType\"\n//               value={formData.idProofType}\n//               onChange={handleInputChange}\n//               className=\"input-field\"\n//             >\n//               <option value=\"adhar\">Aadhar Card</option>\n//               <option value=\"passport\">Passport</option>\n//             </select>\n//             {errors.idProofType && <p className=\"error-text\">{errors.idProofType}</p>}\n//           </div>\n\n//           {/* File Upload for Driving License */}\n//           <div className=\"form-group\">\n//             <label htmlFor=\"drivingLicense\" className=\"label\">Upload Driving License</label>\n//             <input\n//               type=\"file\"\n//               id=\"drivingLicense\"\n//               name=\"drivingLicense\"\n//               onChange={handleFileChange}\n//               className=\"file-input\"\n//             />\n//             {errors.drivingLicense && <p className=\"error-text\">{errors.drivingLicense}</p>}\n//           </div>\n\n//           {/* File Upload for Identification Proof */}\n//           <div className=\"form-group\">\n//             <label htmlFor=\"idProofFile\" className=\"label\">Upload Identification Proof</label>\n//             <input\n//               type=\"file\"\n//               id=\"idProofFile\"\n//               name=\"idProofFile\"\n//               onChange={handleFileChange}\n//               className=\"file-input\"\n//             />\n//             {errors.idProofFile && <p className=\"error-text\">{errors.idProofFile}</p>}\n//           </div>\n\n//           <button type=\"submit\" className=\"submit-button\">\n//             Register as Driver\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DriverRegistrationPage;\n\nimport React, { useState } from 'react';\nimport \"../styles/driver-registration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriverRegistrationPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    age: '',\n    address: '',\n    licenseNumber: '',\n    identificationProof: '',\n    idProofType: 'adhar',\n    // Default value for identification proof type\n    drivingLicense: null,\n    // To handle file upload for driving license\n    idProofFile: null // To handle file upload for identification proof\n  });\n  const [errors, setErrors] = useState({});\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    const {\n      name,\n      files\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: files[0]\n    });\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    // Loop over each field in formData to check if they are empty\n    Object.keys(formData).forEach(field => {\n      if (field !== 'drivingLicense' && field !== 'idProofFile' && !formData[field]) {\n        newErrors[field] = `${field.replace(/([A-Z])/g, ' $1').toUpperCase()} is required.`;\n      }\n    });\n\n    // Specific validation for file fields\n    if (!formData.drivingLicense) newErrors.drivingLicense = 'Please upload your driving license.';\n    if (!formData.idProofFile) newErrors.idProofFile = 'Please upload your identification proof.';\n    return newErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length === 0) {\n      // Form is valid, handle the form submission\n      console.log('Form submitted:', formData);\n    } else {\n      setErrors(formErrors);\n    }\n  };\n\n  // Array of fields to render\n  const fields = [{\n    label: 'Full Name',\n    name: 'name',\n    type: 'text'\n  }, {\n    label: 'Email',\n    name: 'email',\n    type: 'email'\n  }, {\n    label: 'Phone Number',\n    name: 'phone',\n    type: 'text'\n  }, {\n    label: 'Age',\n    name: 'age',\n    type: 'number'\n  }, {\n    label: 'Address',\n    name: 'address',\n    type: 'text'\n  }, {\n    label: 'License Number',\n    name: 'licenseNumber',\n    type: 'text'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-r from-blue-900 to-yellow-400 flex items-center justify-center py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 m-6  rounded-lg shadow-lg w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-heading\",\n        children: \"Driver Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-container\",\n        children: [fields.map(({\n          label,\n          name,\n          type\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: name,\n            className: \"label\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: type,\n            id: name,\n            name: name,\n            value: formData[name],\n            onChange: handleInputChange,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this), errors[name] && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: errors[name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 24\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 5\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"idProofType\",\n            className: \"label\",\n            children: \"Identification Proof Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"idProofType\",\n            name: \"idProofType\",\n            value: formData.idProofType,\n            onChange: handleInputChange,\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"adhar\",\n              children: \"Aadhar Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"passport\",\n              children: \"Passport\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 5\n          }, this), errors.idProofType && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: errors.idProofType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"drivingLicense\",\n            className: \"label\",\n            children: \"Upload Driving License\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"drivingLicense\",\n            name: \"drivingLicense\",\n            onChange: handleFileChange,\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 5\n          }, this), errors.drivingLicense && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: errors.drivingLicense\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"idProofFile\",\n            className: \"label\",\n            children: \"Upload Identification Proof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"idProofFile\",\n            name: \"idProofFile\",\n            onChange: handleFileChange,\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 5\n          }, this), errors.idProofFile && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: errors.idProofFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Register as Driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverRegistrationPage, \"T4v+N15PZtE4T9kK2w1tse4bGiI=\");\n_c = DriverRegistrationPage;\nexport default DriverRegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"DriverRegistrationPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DriverRegistrationPage","_s","formData","setFormData","name","email","phone","age","address","licenseNumber","identificationProof","idProofType","drivingLicense","idProofFile","errors","setErrors","handleInputChange","e","value","target","handleFileChange","files","validateForm","newErrors","Object","keys","forEach","field","replace","toUpperCase","handleSubmit","preventDefault","formErrors","length","console","log","fields","label","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","htmlFor","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Megha Dutta/car rental/new_car/src/pages/DriverRegistrationPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import \"../styles/driver-registration.css\";\r\n\r\n// const DriverRegistrationPage = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     age: '',\r\n//     address: '',\r\n//     licenseNumber: '',\r\n//     identificationProof: '',\r\n//     idProofType: 'adhar', // Default value for identification proof type\r\n//     drivingLicense: null, // To handle file upload for driving license\r\n//     idProofFile: null, // To handle file upload for identification proof\r\n//     picture: null, // To handle file upload for the driver's picture\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//     const { name, files } = e.target;\r\n//     setFormData({ ...formData, [name]: files[0] });\r\n//   };\r\n\r\n//   const validateForm = () => {\r\n//     const newErrors = {};\r\n//     Object.keys(formData).forEach((field) => {\r\n//       if (field !== 'drivingLicense' && field !== 'idProofFile' && field !== 'picture' && !formData[field]) {\r\n//         newErrors[field] = `${field.replace(/([A-Z])/g, ' $1').toUpperCase()} is required.`;\r\n//       }\r\n//     });\r\n\r\n//     // Specific validation for file fields\r\n//     if (!formData.drivingLicense) newErrors.drivingLicense = 'Please upload your driving license.';\r\n//     if (!formData.idProofFile) newErrors.idProofFile = 'Please upload your identification proof.';\r\n//     if (!formData.picture) newErrors.picture = 'Please upload a picture.';\r\n\r\n//     return newErrors;\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const formErrors = validateForm();\r\n//     if (Object.keys(formErrors).length === 0) {\r\n//       console.log('Form submitted:', formData);\r\n//     } else {\r\n//       setErrors(formErrors);\r\n//     }\r\n//   };\r\n\r\n//   const fields = [\r\n//     { label: 'Full Name', name: 'name', type: 'text' },\r\n//     { label: 'Email', name: 'email', type: 'email' },\r\n//     { label: 'Phone Number', name: 'phone', type: 'text' },\r\n//     { label: 'Age', name: 'age', type: 'number' },\r\n//     { label: 'Address', name: 'address', type: 'text' },\r\n//     { label: 'License Number', name: 'licenseNumber', type: 'text' },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-r from-blue-900 to-yellow-400 flex items-center justify-center py-8\">\r\n//       <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n//         <h2 className=\"form-heading\">Driver Registration</h2>\r\n//         <form onSubmit={handleSubmit} className=\"form-container\">\r\n//           {/* Render standard input fields */}\r\n//           {fields.map(({ label, name, type }) => (\r\n//             <div key={name} className=\"form-group\">\r\n//               <label htmlFor={name} className=\"label\">{label}</label>\r\n//               <div className=\"input-group\">\r\n//                 <input\r\n//                   type={type}\r\n//                   id={name}\r\n//                   name={name}\r\n//                   value={formData[name]}\r\n//                   onChange={handleInputChange}\r\n//                   className=\"input-field\"\r\n//                 />\r\n//                 {name === 'name' && (\r\n//                   <input\r\n//                     type=\"file\"\r\n//                     id=\"picture\"\r\n//                     name=\"picture\"\r\n//                     onChange={handleFileChange}\r\n//                     className=\"file-input\"\r\n//                     accept=\"image/*\"\r\n//                   />\r\n//                 )}\r\n//               </div>\r\n//               {errors[name] && <p className=\"error-text\">{errors[name]}</p>}\r\n//             </div>\r\n//           ))}\r\n\r\n//           {/* Identification Proof Type */}\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"idProofType\" className=\"label\">Identification Proof Type</label>\r\n//             <select\r\n//               id=\"idProofType\"\r\n//               name=\"idProofType\"\r\n//               value={formData.idProofType}\r\n//               onChange={handleInputChange}\r\n//               className=\"input-field\"\r\n//             >\r\n//               <option value=\"adhar\">Aadhar Card</option>\r\n//               <option value=\"passport\">Passport</option>\r\n//             </select>\r\n//             {errors.idProofType && <p className=\"error-text\">{errors.idProofType}</p>}\r\n//           </div>\r\n\r\n//           {/* File Upload for Driving License */}\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"drivingLicense\" className=\"label\">Upload Driving License</label>\r\n//             <input\r\n//               type=\"file\"\r\n//               id=\"drivingLicense\"\r\n//               name=\"drivingLicense\"\r\n//               onChange={handleFileChange}\r\n//               className=\"file-input\"\r\n//             />\r\n//             {errors.drivingLicense && <p className=\"error-text\">{errors.drivingLicense}</p>}\r\n//           </div>\r\n\r\n//           {/* File Upload for Identification Proof */}\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"idProofFile\" className=\"label\">Upload Identification Proof</label>\r\n//             <input\r\n//               type=\"file\"\r\n//               id=\"idProofFile\"\r\n//               name=\"idProofFile\"\r\n//               onChange={handleFileChange}\r\n//               className=\"file-input\"\r\n//             />\r\n//             {errors.idProofFile && <p className=\"error-text\">{errors.idProofFile}</p>}\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"submit-button\">\r\n//             Register as Driver\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DriverRegistrationPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport \"../styles/driver-registration.css\";\r\n\r\nconst DriverRegistrationPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    age: '',\r\n    address: '',\r\n    licenseNumber: '',\r\n    identificationProof: '',\r\n    idProofType: 'adhar', // Default value for identification proof type\r\n    drivingLicense: null, // To handle file upload for driving license\r\n    idProofFile: null, // To handle file upload for identification proof\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const { name, files } = e.target;\r\n    setFormData({ ...formData, [name]: files[0] });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    // Loop over each field in formData to check if they are empty\r\n    Object.keys(formData).forEach((field) => {\r\n      if (field !== 'drivingLicense' && field !== 'idProofFile' && !formData[field]) {\r\n        newErrors[field] = `${field.replace(/([A-Z])/g, ' $1').toUpperCase()} is required.`;\r\n      }\r\n    });\r\n\r\n    // Specific validation for file fields\r\n    if (!formData.drivingLicense) newErrors.drivingLicense = 'Please upload your driving license.';\r\n    if (!formData.idProofFile) newErrors.idProofFile = 'Please upload your identification proof.';\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formErrors = validateForm();\r\n    if (Object.keys(formErrors).length === 0) {\r\n      // Form is valid, handle the form submission\r\n      console.log('Form submitted:', formData);\r\n    } else {\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  // Array of fields to render\r\n  const fields = [\r\n    { label: 'Full Name', name: 'name', type: 'text' },\r\n    { label: 'Email', name: 'email', type: 'email' },\r\n    { label: 'Phone Number', name: 'phone', type: 'text' },\r\n    { label: 'Age', name: 'age', type: 'number' },\r\n    { label: 'Address', name: 'address', type: 'text' },\r\n    { label: 'License Number', name: 'licenseNumber', type: 'text' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-blue-900 to-yellow-400 flex items-center justify-center py-8\">\r\n      <div className=\"bg-white p-8 m-6  rounded-lg shadow-lg w-full max-w-md\">\r\n               <h2 className=\"form-heading\">Driver Registration</h2>\r\n<form onSubmit={handleSubmit} className=\"form-container\">\r\n  {/* Render standard input fields */}\r\n  {fields.map(({ label, name, type }) => (\r\n    <div key={name} className=\"form-group\">\r\n      <label htmlFor={name} className=\"label\">{label}</label>\r\n      <input\r\n        type={type}\r\n        id={name}\r\n        name={name}\r\n        value={formData[name]}\r\n        onChange={handleInputChange}\r\n        className=\"input-field\"\r\n      />\r\n      {errors[name] && <p className=\"error-text\">{errors[name]}</p>}\r\n    </div>\r\n  ))}\r\n\r\n  {/* Identification Proof Type (Aadhar or Passport) */}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"idProofType\" className=\"label\">Identification Proof Type</label>\r\n    <select\r\n      id=\"idProofType\"\r\n      name=\"idProofType\"\r\n      value={formData.idProofType}\r\n      onChange={handleInputChange}\r\n      className=\"input-field\"\r\n    >\r\n      <option value=\"adhar\">Aadhar Card</option>\r\n      <option value=\"passport\">Passport</option>\r\n    </select>\r\n    {errors.idProofType && <p className=\"error-text\">{errors.idProofType}</p>}\r\n  </div>\r\n\r\n  {/* File Upload for Driving License */}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"drivingLicense\" className=\"label\">Upload Driving License</label>\r\n    <input\r\n      type=\"file\"\r\n      id=\"drivingLicense\"\r\n      name=\"drivingLicense\"\r\n      onChange={handleFileChange}\r\n      className=\"file-input\"\r\n    />\r\n    {errors.drivingLicense && <p className=\"error-text\">{errors.drivingLicense}</p>}\r\n  </div>\r\n\r\n  {/* File Upload for Identification Proof */}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"idProofFile\" className=\"label\">Upload Identification Proof</label>\r\n    <input\r\n      type=\"file\"\r\n      id=\"idProofFile\"\r\n      name=\"idProofFile\"\r\n      onChange={handleFileChange}\r\n      className=\"file-input\"\r\n    />\r\n    {errors.idProofFile && <p className=\"error-text\">{errors.idProofFile}</p>}\r\n  </div>\r\n\r\n  <button type=\"submit\" className=\"submit-button\">\r\n    Register as Driver\r\n  </button>\r\n</form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriverRegistrationPage;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE,EAAE;IACjBC,mBAAmB,EAAE,EAAE;IACvBC,WAAW,EAAE,OAAO;IAAE;IACtBC,cAAc,EAAE,IAAI;IAAE;IACtBC,WAAW,EAAE,IAAI,CAAE;EACrB,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}